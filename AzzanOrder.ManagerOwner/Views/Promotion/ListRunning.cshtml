@using Newtonsoft.Json
@model dynamic

@{
    var logo = Model.Logo;
    var backgroundColor = Model.BackgroundColor;
    var carousel = Model.Carousel;
    var banner = Model.Banner;
    var placeholderImage = "https://s6.imgcdn.dev/gl4Iv.png";
}

<div class="container">
    <h1 class="h3 mb-3">Running Promotions</h1>

    <div class="card">
        <div class="card-header">
            <h5 class="card-title">Header</h5>
        </div>

        <div class="header sticky" style="background-color: @backgroundColor">
            <img src="@(string.IsNullOrEmpty(logo.Image) ? placeholderImage : logo.Image)"
                 alt="Company logo"
                 class="logo"
                 loading="lazy" />
        </div>

        <div class="card-body">
            <form id="promotionForm" enctype="multipart/form-data" method="post" action="@Url.Action("UploadImage", "Promotion")">
                <div class="mb-3 row">
                    <label class="col-form-label col-sm-2 text-sm-end pt-sm-0">Image</label>
                    <div class="col-sm-10">
                        <input type="file">
                        <small class="form-check-label text-muted">Only png and jpg allowed.</small>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label for="colorPicker" class="col-form-label col-sm-2 text-sm-end pt-sm-0">Pick a Color</label>
                    <div class="col-sm-10">
                        <input type="color" class="form-control form-control-color" id="colorPicker" name="colorPicker" value="@backgroundColor" />
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>

        <div class="card-header">
            <h5 class="card-title">Carousel</h5>
        </div>

        <div class="card-body">
            <div class="carousel-container">
                <div class="small-image-container left">
                    <img class="small-image"
                         alt="@carousel[0]?.Title"
                         src="@(string.IsNullOrEmpty(carousel[0]?.Image) ? placeholderImage : carousel[0]?.Image)"
                         onclick="handlePrev()" />
                </div>
                <div class="big-image-container">
                    <img class="big-image" alt="@carousel[1]?.Title" src="@(string.IsNullOrEmpty(carousel[1]?.Image) ? placeholderImage : carousel[1]?.Image)" />
                    <div class="promotion-details">
                        <h2>@carousel[1]?.Title</h2>
                    </div>
                </div>
                <div class="small-image-container right">
                    <img class="small-image"
                         alt="@carousel[2]?.Title"
                         src="@(string.IsNullOrEmpty(carousel[2]?.Image) ? placeholderImage : carousel[2]?.Image)"
                         onclick="handleNext()" />
                </div>
            </div>
        </div>

        <div class="card-header">
            <h5 class="card-title">Banner</h5>
        </div>
        <section class="banner">
            <div class="image-gallery">
                @foreach (var promotion in banner)
                {
                    <div class="image-wrapper">
                        <img src="@(string.IsNullOrEmpty(promotion.Image) ? placeholderImage : promotion.Image)" alt="@promotion.Title" />
                    </div>
                }
            </div>

            <nav class="banner-navigation">
                @for (int i = 0; i < banner.Count; i++)
                {
                    <div class="dot-indicator @(i == 0 ? "active" : "")"></div>
                }
            </nav>
        </section>
        <!-- Banner component ends here -->

        <div>
            <a href="javascript:void(0);" class="btn btn-primary" onclick="toggleListAll()">View All Promotions</a>
            <a href="@Url.Action("Add", "Promotion")" class="btn btn-primary">Add New Promotion</a>
        </div>

        <div id="listAllContainer" style="display:none;">
            @Html.Partial("ListAll")
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentIndex = 1;
        const promotions = @Html.Raw(JsonConvert.SerializeObject(Model.Carousel));

        function handleNext() {
            currentIndex = (currentIndex + 1) % promotions.length;
            updateCarousel();
        }

        function handlePrev() {
            currentIndex = (currentIndex - 1 + promotions.length) % promotions.length;
            updateCarousel();
        }

        function updateCarousel() {
            const leftIndex = (currentIndex - 1 + promotions.length) % promotions.length;
            const rightIndex = (currentIndex + 1) % promotions.length;

            document.querySelector('.big-image').src = promotions[currentIndex].Image;
            document.querySelector('.big-image').alt = promotions[currentIndex].Title;
            document.querySelector('.promotion-details h2').innerText = promotions[currentIndex].Title;

            document.querySelector('.small-image-container.left .small-image').src = promotions[leftIndex].Image;
            document.querySelector('.small-image-container.left .small-image').alt = promotions[leftIndex].Title;

            document.querySelector('.small-image-container.right .small-image').src = promotions[rightIndex].Image;
            document.querySelector('.small-image-container.right .small-image').alt = promotions[rightIndex].Title;
        }

        function toggleListAll() {
            const listAllContainer = document.getElementById('listAllContainer');
            listAllContainer.style.display = listAllContainer.style.display === 'none' ? 'block' : 'none';
        }
    </script>
}

<style>
    .carousel-container {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 20vh;
        overflow: hidden;
    }

    .big-image-container {
        position: relative;
        width: 70%;
        z-index: 2;
        border-radius: 12px;
        overflow: hidden;
        text-align: center;
    }

    .big-image {
        width: 100%;
        height: auto;
        object-fit: cover;
    }

    .promotion-details {
        position: absolute;
        bottom: 0;
        background: rgba(0, 0, 0, 0.1);
        color: white;
        width: 100%;
        padding: 10px;
    }

    .small-image-container {
        position: absolute;
        background: rgba(0, 0, 0, 0.3);
        width: 56%; /* 70% of 80% */
        z-index: 1;
    }

    .small-image-container.left {
        left: 0;
        transform: translateX(-30%);
    }

    .small-image-container.right {
        right: 0;
        transform: translateX(30%);
    }

    .small-image {
        width: 100%;
        cursor: pointer;
        border-radius: 12px;
        object-fit: cover;
    }

    media (max-width: 768px) {
        .small-image-container {
            width: 63%; /* 70% of 90% */
        }

        .small-image-container.left {
            transform: translateX(-35%);
        }

        .small-image-container.right {
            transform: translateX(35%);
        }
    }

    .banner {
        width: 100vw; /* Full width of the viewport */
        max-width: 100%;
        height: 300px;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        padding: 0;
    }

    .image-gallery {
        width: 100%;
        height: 100%;
        position: relative;
        overflow: hidden;
    }

    .image-wrapper img {
        width: 100%;
        height: auto;
        object-fit: cover;
    }

    .banner-navigation {
        display: flex;
        gap: 8px;
        position: absolute;
        bottom: 40px; /* Increased space from the bottom */
        z-index: 2; /* Ensure dots are on top */
    }

    .dot-indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: gray;
    }

    .dot-indicator.active {
        background-color: white;
    }
</style>