@model AzzanOrder.ManagerOwner.Models.Model
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<div class="col-12">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">Add Menu Item</h5>
        </div>
        <div class="card-body">
            <form asp-action="AddPost" asp-controller="Menu" method="post">
                <div class="mb-3 row">
                    <label class="col-form-label col-sm-2 text-sm-end">Name</label>
                    <div class="col-sm-10">
                        <input asp-for="menuItem.ItemName" class="form-control" />
                        <span asp-validation-for="menuItem.ItemName" class="text-danger"></span>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="col-form-label col-sm-2 text-sm-end">Item Category</label>
                    <div class="col-sm-10">
                        <ul>
                            @{
                                foreach (var i in Model.itemCategories)
                                {
                                    <li>
                                        <input type="checkbox" name="SelectedCategories" value="@i.ItemCategoryId"
                                               data-description="@i.Description" class="category-checkbox" />
                                        <label>@i.ItemCategoryName</label>
                                    </li>
                                }
                            }
                        </ul>
                        <span id="category-warning" class="text-danger" style="display:none;">
                            Items in <strong>@Model.itemCategories.FirstOrDefault(c => c.Description == "TOPPING")?.ItemCategoryName</strong>
                            cannot belong to other categories.
                        </span>


                    </div>
                </div>


                <div class="mb-3 row">
                    <label class="col-form-label col-sm-2 text-sm-end">Price</label>
                    <div class="col-sm-10">
                        <input asp-for="menuItem.Price" class="form-control" />
                        <span asp-validation-for="menuItem.Price" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3 row">
                    <label class="col-form-label col-sm-2 text-sm-end">Description</label>
                    <div class="col-sm-10">


                        <textarea asp-for="menuItem.Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="menuItem.Description" class="text-danger"></span>
                    </div>
                </div>

                

                <div class="mb-3 row">
                    <label class="col-form-label col-sm-2 text-sm-end pt-sm-0">Image</label>
                    <div class="col-sm-10">
                        <input asp-for="menuItem.Image" name="menuItemImage" type="file" accept=".png, .jpg">
                        <small class="form-check-label text-muted">Only png and jpg allowed.</small>
                    </div>
                </div>



                <div class="mb-3 row">
                    <div class="col-sm-10 ms-sm-auto">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>





<script>
    document.addEventListener("DOMContentLoaded", function () {
        const categoryCheckboxes = document.querySelectorAll('.category-checkbox');
        const warningMessage = document.getElementById('category-warning');

        categoryCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const isTopping = this.dataset.description === 'TOPPING';

                if (isTopping && this.checked) {
                    categoryCheckboxes.forEach(cb => {
                        if (cb !== this) {
                            cb.disabled = true;
                        }
                    });
                    warningMessage.style.display = 'block';
                } else if (isTopping && !this.checked) {
                    categoryCheckboxes.forEach(cb => cb.disabled = false);
                    warningMessage.style.display = 'none';
                }
            });
        });
    });
</script>