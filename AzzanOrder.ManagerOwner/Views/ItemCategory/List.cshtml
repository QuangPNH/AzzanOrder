@model AzzanOrder.ManagerOwner.Models.Model

<h1 class="h3 mb-3">Item Category Management</h1>

<div class="col-12">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">List Item Category</h5>
        </div>
        <div>
            <a href="@Url.Action("Add", "ItemCategory")" class="btn btn-primary">Add New Item Category</a>
        </div>

        <table class="table table-striped table-hover">
            <thead>
                @{
                    int position = 1;
                }
                <tr>
                    <th style="width:5%">No.</th>
                    <th style="width:25%">Item Category Name</th>
                    <th class="d-none d-md-table-cell" style="width:20%">Description</th>
                    <th class="d-none d-md-table-cell" style="width:10%">Start Date </th>
                    <th class="d-none d-md-table-cell" style="width:10%">End Date</th>
                    <th style="width:5%">Is Combo</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var data in Model.itemCategories)
                {
                    <tr>
                        <td>@position</td>
                        <td>@data.ItemCategoryName</td>
                        <td class="d-none d-md-table-cell">@data.Description</td>
                        <td class="d-none d-md-table-cell">@data.StartDate</td>
                        <td class="d-none d-md-table-cell">@data.EndDate</td>
                        <td>@(data.IsCombo == true ? "Yes" : "No")</td>
                        <td class="table-action">
                            <a href="@Url.Action("Update", "ItemCategory", new { id = data.ItemCategoryId })"><i class="align-middle" data-feather="edit-2"></i></a>
                            <a href="@Url.Action("Delete", "ItemCategory", new { id = data.ItemCategoryId })"><i class="align-middle" data-feather="trash"></i></a>
                        </td>
                    </tr>
                    position++;
                }
            </tbody>
        </table>

        <div class="row mt-3">
            <div class="col d-flex justify-content-end">
                <nav aria-label="Page navigation example">
                    <ul class="pagination pagination-md mb-0">
                        <li class="page-item @(Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("List", new { page = Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList - 1 })">
                                <i class="fas fa-angle-left"></i>
                            </a>
                        </li>
                        @{
                            int startPage = Math.Max(1, Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList - Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed / 2);
                            int endPage = Math.Min(Model.anIntegerUsedForCountingNumberOfPageQueuedForTheList, startPage + Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed - 1);
                            if (endPage - startPage < Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed)
                            {
                                startPage = Math.Max(1, endPage - Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed + 1);
                            }
                        }
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("List", new { page = i })">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList == Model.anIntegerUsedForCountingNumberOfPageQueuedForTheList ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("List", new { page = Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList + 1 })">
                                <i class="fas fa-angle-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>