@* @model IEnumerable<AzzanOrder.ManagerOwner.Models.VoucherDetail> *@
    @model AzzanOrder.ManagerOwner.Models.Model 
<h1 class="h3 mb-3">Voucher Management</h1>

<div class="col-12">
    <div class="card">
        <div class="card-header">
            <h5 class="card-title">ListVoucher</h5>
        </div>
        <div>
            <a href="@Url.Action("Add", "Voucher")" class="btn btn-primary">Add New Voucher</a>
        </div>

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th style="width:5%">No.</th>
                    <th style="width:15%">Title</th>
                    <th style="width:50%">Item Category</th>
                    <th style="width:5%">Discount</th>
                    <th class="d-none d-md-table-cell" style="width:10%">Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
               @*  @for (int i = 0; i < Model.Count(); i++)
                {
                    var voucherDetail = Model.ElementAt(i);
                    var vouchers = voucherDetail.Vouchers;
                    <tr>
                        <td>@(i + 1)</td>
                        <td>@voucherDetail.Title</td>
                        <td>
                            @foreach (var voucher in Model.Inc)
                            {
                                <div>
                                    @voucher.ItemCategory?.ItemCategoryName
                                    <span class="@(voucher.IsActive == true ? "text-success ms-2" : "text-danger ms-2")">
                                        @(voucher.IsActive == true ? "Active" : "Not Active")
                                    </span>
                                </div>
                            }
                        </td>
                        <td>@voucherDetail.Discount%</td>
                        <td class="d-none d-md-table-cell">@voucherDetail.Price</td>
                        <td class="table-action">
                            <a href="@Url.Action("Update", "Voucher", new { id = voucherDetail.VoucherDetailId })"><i class="align-middle" data-feather="edit-2"></i></a>
                            <a href="@Url.Action("Delete", "Voucher", new { id = voucherDetail.VoucherDetailId })"><i class="align-middle" data-feather="trash"></i></a>
                        </td>
                    </tr>
                } *@

                @{
                    foreach (var i in Model.voucherDetails.Where(v => v.Vouchers.Any(v => v.IsActive == true)))
                    {
                        <tr>
                            <td>@i.VoucherDetailId</td>
                            <td>@i.Title</td>
                            <td>
                                @foreach (var voucher in Model.vouchers.Where(v => v.VoucherDetailId == i.VoucherDetailId))
                                {
                                    <div>
                                        @voucher.ItemCategory.ItemCategoryName
                                        <span class="@(voucher.IsActive == true ? "text-success ms-2" : "text-danger ms-2")">
                                            @(voucher.IsActive == true ? "Active" : "Not Active")
                                        </span>
                                    </div>
                                }
                            </td>
                            <td>@i.Discount%</td>
                            <td class="d-none d-md-table-cell">@i.Price</td>
                            <td class="table-action">
                                <a href="@Url.Action("Update", "Voucher", new { id = i.VoucherDetailId })"><i class="align-middle" data-feather="edit-2"></i></a>
                                <a href="@Url.Action("Delete", "Voucher", new { id = i.VoucherDetailId })"><i class="align-middle" data-feather="trash"></i></a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <div class="row mt-3">
            <div class="col d-flex justify-content-end">
                <nav aria-label="Page navigation example">
                    <ul class="pagination pagination-md mb-0">
                        <li class="page-item @(Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("List", new { page = Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList - 1 })">
                                <i class="fas fa-angle-left"></i>
                            </a>
                        </li>
                        @{
                            int startPage = Math.Max(1, Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList - Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed / 2);
                            int endPage = Math.Min(Model.anIntegerUsedForCountingNumberOfPageQueuedForTheList, startPage + Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed - 1);
                            if (endPage - startPage < Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed)
                            {
                                startPage = Math.Max(1, endPage - Model.thisIntegerIsUsedForKnowingTheMaxNumberOfPageNavButtonShouldBeDisplayed + 1);
                            }
                        }
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList == i ? "active" : "")">
                                <a class="page-link" href="@Url.Action("List", new { page = i })">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList == Model.anIntegerUsedForCountingNumberOfPageQueuedForTheList ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("List", new { page = Model.anIntegerUsedForKnowingWhatTheCurrentPageOfTheList + 1 })">
                                <i class="fas fa-angle-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>